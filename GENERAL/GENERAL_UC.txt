LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.numeric_std.ALL; -- unsigned mota erabili ahal izateko

-- ping-pong jokoa. bi erabiltzaileen artean.
-- fitxategi honetan kontrol-unitatearen definizioa soilik ageri da.
ENTITY LCD_ctrl_UC IS
	PORT (
		-- Entradas
		DONE_CURSOR   : IN STD_LOGIC;
		DONE_COLOUR   : IN STD_LOGIC;
		TC_OFF        : IN STD_LOGIC;

		clk           : IN STD_LOGIC;
		RESET         : IN STD_LOGIC;

		-- Salidas
		RESET_BOLA    : OUT STD_LOGIC;
		CL_LCD_DATA   : OUT STD_LOGIC;
		OS_SETCURSOR  : OUT STD_LOGIC;
		OD_DRAWCOLOUR : OUT STD_LOGIC;
		DEC_OFF       : OUT STD_LOGIC;

		REG_XCOL      : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
		REG_YROW      : OUT STD_LOGIC_VECTOR(8 DOWNTO 0);
		RGB           : OUT STD_LOGIC_VECTOR(15 DOWNTO 0);
		NUM_PIX       : OUT STD_LOGIC_VECTOR(16 DOWNTO 0)
	);
END LCD_ctrl_UC;
ARCHITECTURE def_LCD_ctrl_UC OF LCD_ctrl_UC IS
	TYPE estado IS (e0, e1, e2, e3, e4, e5, e6, e7, e8, e9);
	SIGNAL EP, ES : estado;

BEGIN

	PROCESS (EP, DONE_CURSOR, DONE_COLOUR, TC_OFF)
		-- proceso que determina el ES
	BEGIN
		CASE EP IS
			WHEN e0 => es <= E1;
			WHEN e1 =>
				IF (DONE_CURSOR = '1') THEN
					ES <= e2;
				ELSE
					ES <= e1;
				END IF;

			WHEN e2 => ES <= e3;
			WHEN e3 =>
				IF (DONE_COLOUR = '1') THEN
					ES <= e4;
				ELSE
					ES <= e3;
				END IF;
			WHEN e4 => ES <= e5;
			WHEN e5 =>
				IF (DONE_CURSOR = '1') THEN
					ES <= e6;
				ELSE
					ES <= e5;
				END IF;
			WHEN e6 => ES <= e7;
			WHEN e7 =>
				IF (DONE_COLOUR = '1') THEN
					ES <= e8;
				ELSE
					ES <= e7;
				END IF;
			WHEN e8 =>
				IF (TC_OFF = '1') THEN
					ES <= e9;
				ELSE
					ES <= e4;
				END IF;

		END CASE;
	END PROCESS;

	-- proceso que actualiza el estado
	PROCESS (clk, RESET)
	BEGIN
		IF RESET = '1' THEN
			EP <= e0;
		ELSIF (clk'EVENT) AND (clk = '1') THEN
			EP <= ES;
		END IF;
	END PROCESS;
	-- SeÃ±ales de control

	CL_LCD_DATA <= '1' WHEN (EP = e0 OR EP = e1 OR EP = e14) ELSE
		'0';
	LD_DRAW   <= '1' WHEN (EP = e14);
	LD_CURSOR <= '1' WHEN (EP = e0) ELSE
		'0';
	CL_DAT <= '1' WHEN (EP = e0) ELSE
		'0';
	RSCOM <= '1' WHEN (EP = e1 OR EP = e14 OR EP = e12) ELSE
		'0';
	LD_2C <= '1' WHEN (EP = e14) ELSE
		'0';
	LCD_WR_N <= '0' WHEN (EP = e2 OR EP = e6) ELSE
		'1';
	LCD_CS_N <= '0' WHEN (EP = e2 OR EP = e6) ELSE
		'1';
	RSDAT <= '1' WHEN (EP = e13 OR EP = e5) ELSE
		'0';
	INC_DAT <= '1' WHEN (EP = e13 OR EP = e12 OR EP = e5) ELSE
		'0';
	DONE_CURSOR <= '1' WHEN (EP = e11) ELSE
		'0';
	DONE_COLOUR <= '1' WHEN (EP = e10) ELSE
		'0';
	DEC_PIX <= '1' WHEN (EP = e7) ELSE
		'0';

END def_LCD_ctrl_UC;